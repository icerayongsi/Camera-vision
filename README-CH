工业相机Linux SDK使用说明
===========================================================================
版本号： 4.4.0

支持相机：GigE相机和U3V相机

支持系统：ubuntu 14.04(32和64位)、ubuntu 16.04(32和64位)、centos7(32和64位)、
		  redhat(64位)
===========================================================================

运行环境配置
===========================================================================
在编译示例程序之前，确认LD_LIBRARY_PATH和MVCAM_COMMON_RUNENV两个环境变量已经生效.
eg: echo $LD_LIBRARY_PATH
    输出：/opt/XXX/lib/xxx:...
	
	echo $MVCAM_COMMON_RUNENV
	输出：/opt/XXX/lib
如果当前环境不存在以上两个环境变量或者变量中不包含/opt/XXX/lib相关值时，需要跳转到安装包所在路径，并输入：
	source ./set_env_path.sh
===========================================================================

软件安装路径：/opt/XXX，目录结构如下：
	XXX
	|-bin			：示例程序的可执行文件
	|-doc			：二次开发说明文档
	|-driver		：相机驱动安装
	|-include		：头文件
	|-lib			：lib文件
	|-logserver		：日志服务
	|-MVFG			：实体采集卡文件和示例程序
	|-Samples		：示例程序
===========================================================================

程序演示（C/C++控制台程序和Qt界面程序）
===========================================================================
C/C++控制台程序
===========================================================================
ChunkData：设置Chunk选项并开启chunk例程。
1. 枚举设备，选择设备并创建句柄，打开设备
2. 开启Chunk Mode,设置Chunk Selector,开启Chunk Enable
3. 设置触发模式为off
4. 开始取流,开线程用来获取chunk数据
5. 输入enter结束取流

===========================================================================
Display：图像显示例程。
使用前请先安装X11相关库：sudo apt-get install libx11-dev.
创建的显示窗口不支持拉伸。
1. 使用xlib库来创建图像窗口
2. 枚举设备，选择设备并创建句柄，打开设备
3. 开始取流，调用显示函数传入窗口句柄
4. 输入enter结束取流

===========================================================================
ForceIP：设置forceip
1. 枚举设备，选择设备并创建句柄
2. 设置forceip
3. 输入enter结束取流

===========================================================================
ForceIPEx：设置forceip拓展（用于第三方相机）
1. 枚举设备，选择设备并创建句柄
2. 设置forceip
3. 输入enter结束取流

===========================================================================
Grab_ImageCallback：回调方式抓取图像
1. 枚举设备，选择设备并创建句柄，打开设备
2. 设置触发模式为off
3. 开始取流
4. 若有图像数据，ImageCallBackEx会被调用
5. 输入enter结束取流

===========================================================================
GrabImage：主动方式抓取图像
1. 枚举设备，选择设备并创建句柄，打开设备
2. 设置触发模式为off
3. 开始取流，开线程用来获取图像数据
4. 若有图像数据，MV_CC_GetOneFrameTimeout会返回MV_OK
5. 输入enter结束取流

===========================================================================
GrabMultipleCamera：多相机取流
1. 枚举设备，选择设备并创建句柄，打开设备
2. 设置触发模式为off
3. 开始取流，开线程用来获取图像数据
4. 若有图像数据，MV_CC_GetOneFrameTimeout会返回MV_OK
5. 输入enter结束取流

===========================================================================
Grab_Asynchronous：异步获取图像
1. 枚举设备，选择设备并创建句柄，打开设备
2. 设置触发模式为off
3. 注册取图回调，开始取流，开工作线程用来处理图像数据
4. 若有图像数据，ImageCallBackEx会被调用，将图放进队列中，工作线程会从队列中获取图像
5. 输入enter结束取流

===========================================================================
GrabImage_HighPerformance：主动方式抓取图像
1. 枚举设备，选择设备并创建句柄，打开设备
2. 设置触发模式为off
3. 开始取流，开线程用来获取图像数据
4. 若有图像数据，MV_CC_GetImageBuffer会返回MV_OK，同时需要调用MV_CC_FreeImageBuffer释放
5. 输入enter结束取流

===========================================================================
ImageProcess：图像处理(存图和像素格式转换)
1. 枚举设备，选择设备并创建句柄，打开设备
2. 开始取流，若有图像数据，MV_CC_GetOneFrameTimeout会返回MV_OK
3. 选择case 0、1或2来进行不同图像处理方式
4. 输入enter结束取流

===========================================================================
ReconnectDemo：重连示例
1. 开线程，用于重连相机，线程中有枚举、创建句柄、打开相机、注册异常回调功能
2. 若有相机异常断线，则会重新枚举相机并连接第0个相机，
3. 输入enter结束程序

===========================================================================
SetIO：设置IO
1. 枚举设备，选择设备并创建句柄，打开设备
2. 获取LineSelector，设置LineSelector
3. 获取LineMode，设置LineMode
4. 输入enter结束程序

===========================================================================
SetParam：设置参数
1. 枚举设备，选择设备并创建句柄，打开设备
2. 设置int型变量，获取int型变量
3. 设置float型变量，获取float型变量
4. 设置enum型变量，获取enum型变量
5. 设置bool型变量，获取bool型变量
6. 设置string型变量，获取string型变量
7. 输入enter结束程序

===========================================================================
Trigger_Image：触发方式取流
1. 枚举设备，选择设备并创建句柄，打开设备
2. 设置触发模式为on，设置触发源为软触发
3. 开始取流，开线程用来发送触发命令以及获取图像数据
4. 输入enter结束取流

===========================================================================
Trigger_ImageCallback： 触发回调方式取流
1. 枚举设备，选择设备并创建句柄，打开设备
2. 设置触发模式为on，设置触发源为软触发
3. 开始取流，开线程用来发送触发命令
4. 若有图像数据，ImageCallBackEx会被调用
5. 输入enter结束取流

===========================================================================
ConnectSpecCamera: 无枚举连接相机（远程连接相机）
1. 填充相机ip、网卡ip
2. 创建句柄，连接相机
3. 开始取流

===========================================================================
Events: 使用相机事件
1. 枚举设备，选择设备并创建句柄，打开设备
2. 开启Event
3. 注册Event事件回调（可注册单个、多个、全部事件）
4. 开启取流，当事件来临时会在回调中响应

===========================================================================
MultiCast: 组播取流
1. 枚举设备，选择设备并创建句柄，打开设备
2. 选择control或monitor模式
3. 输入组播组ip和端口
4. 开始取流(若是m端需c端开启取流命令)

===========================================================================
ParametrizeCamera_FileAccess: 
1. 枚举设备，选择设备并创建句柄，打开设备
2. 开线程，使用FileAccess读取相机配置文件
3. 开线程，使用FileAccess将配置文件写入相机

===========================================================================
ParametrizeCamera_LoadAndSave:
需要确保代码编辑器输入的路径为UTF-8编码格式
1. 枚举设备，选择设备并创建句柄，打开设备
2. 将相机属性导出到文件中
3. 从文件中导入相机属性
 
 ===========================================================================
 HighBandwidthDecode：无损解码
 1. 枚举设备，选择设备并创建句柄，打开设备
 2.获取一帧图像数据
 3.调用无损解码接口将HB格式图像数据转为正常图像数据
 
===========================================================================
 InterfaceDemo：采集卡操作示例（此示例程序不支持Linux32、aarch64、armhf、arm-none环境）
 1. 枚举采集卡
 2. 选择采集卡并创建句柄，打开采集卡
 3. 设置采集卡属性
 4. 关闭并销毁采集卡
 
===========================================================================
InterfaceAndDeviceDemo：采集卡下相机操作示例（此示例程序不支持Linux32、aarch64、armhf、arm-none环境）
 1. 枚举采集卡下设备
 2. 选择设备并创建句柄，打开设备
 3. 设置触发模式为off
 4. 开始取流，开线程用来获取图像数据
 5. 若有图像数据，MV_CC_GetImageBuffer会返回MV_OK，同时需要调用MV_CC_FreeImageBuffer释放
 6. 输入enter结束取流
 
===========================================================================
QuickSoftwareTrigger：采集卡快速软触发操作示例（此示例程序不支持Linux32、aarch64、armhf、arm-none环境）
 1. 枚举CXP和XOF采集卡
 2. 选择采集卡并创建句柄，打开采集卡
 3. 设置触发源为快速软触发
 4. 枚举采集卡下设备
 5. 选择设备并创建句柄，打开设备
 6. 开始取流，开线程用来获取图像数据
 7. 调用快速软触发一次，若有图像数据，MV_CC_GetImageBuffer会返回MV_OK，同时需要调用MV_CC_FreeImageBuffer释放
 8. 输入enter结束取流

===========================================================================
 
Qt界面程序
===========================================================================
 BasicDemo：相机基本操作的界面示例程序
1.首先点击"查找设备"按钮进行设备枚举
2.选择设备列表中的一个设备，点击"打开设备"按钮进行打开
3.点击"开始采集"按钮进行图像采集显示，这里可选择"连续模式"或者"触发模式"，若选择"触发模式"，并且是"软触发"模式下，则点击"软触发一次"按钮可进行单帧显示
4.(可选)通过点击"获取参数"和"设置参数"按钮可对曝光、增益、帧率三个参数进行获取和设置

===========================================================================
BasicDemoByGenTL：采集卡界面示例程序
1.点击"枚举Interface"按钮，选择.cti文件进行枚举采集卡
2.点击"枚举设备"按钮进行设备枚举
3.选择设备列表中的一个设备，点击"打开设备"按钮进行打开
4.点击"开始采集"按钮进行图像采集显示，这里可选择"连续模式"或者"触发模式"，若选择"触发模式"，并且是"软触发"模式下，则点击"软触发一次"按钮可进行单帧显示

===========================================================================
BasicDemoLineScan：线阵相机基本操作的界面示例程序
1.首先点击"查找设备"按钮进行设备枚举
2.选择设备列表中的一个设备，点击"打开设备"按钮进行打开
3.选择"触发选项"、"触发开关"和"触发源"，点击"开始采集"按钮进行图像采集显示，若选择"触发开关"为开，并且是"软触发"模式下，则点击"执行一次触发"按钮可进行单帧显示
4.点击不同的图片保存按钮可将对应格式的图片保存到本地
5.(可选)通过点击"参数获取"和"参数设置"按钮可对参数下面的选项进行获取和设置

===========================================================================
InterfaceBasicDemo：采集卡基本操作的界面示例程序（此示例程序不支持Linux32、aarch64、armhf、arm-none环境）
1.选择采集卡类型列表中的一个类型，点击"枚举采集卡"按钮进行枚举
2.选择采集卡设备列表中的一个采集卡，点击"打开采集卡"按钮进行打开
3.点击"属性配置"按钮进行采集卡相关属性设置
4.点击"关闭采集卡"关闭当前的采集卡

===========================================================================
MultiLightCtrlDemo：分时曝光相机基本操作的界面示例程序
1.首先点击"查找设备"按钮进行设备枚举
2.选择设备列表中的一个设备，点击"打开设备"按钮进行打开
3.(可选)通过选择多灯控制下拉框，可对相机支持的多灯控制数进行设置，此示例程序最大支持四灯下图像显示
4.选择"触发选项"、"触发开关"和"触发源"，点击"开始采集"按钮进行图像采集显示，若选择"触发开关"为开，并且是"软触发"模式下，则点击"执行一次触发"按钮可进行单帧显示